row-based
n = 10000
Work took 1.112558 seconds (1 threads)
Work took 0.588123 seconds (2 threads)
Work took 0.313725 seconds (4 threads)
Work took 0.239915 seconds (8 threads)

n = 20000
Work took 4.553251 seconds (1 threads)
Work took 2.372230 seconds (2 threads)
Work took 1.332046 seconds (4 threads)
Work took 0.973258 seconds (8 threads)

n = 30000
Work took 9.162531 seconds (1 threads)
Work took 4.881606 seconds (2 threads)
Work took 2.648947 seconds (4 threads)
Work took 2.178602 seconds (8 threads)


coloumn-based
n = 10000
Work took 8.218484 seconds (1 threads)
Work took 4.300808 seconds (2 threads)
Work took 2.059693 seconds (4 threads)
Work took 4.268787 seconds (8 threads)

n = 20000
Work took 175.033322 seconds (1 threads)
Work took 95.019660 seconds (2 threads)
Work took 52.673292 seconds (4 threads)
Work took 35.080668 seconds (8 threads)

n = 30000
Work took 404.228024 seconds (1 threads)
Work took 216.749827 seconds (2 threads)
Work took 125.029369 seconds (4 threads)
Work took 86.661924 seconds (8 threads)


row-based
(static)
n = 10000
Work took 1.120252 seconds (1 threads)
Work took 0.591180 seconds (2 threads)
Work took 0.316648 seconds (4 threads)
Work took 0.240839 seconds (8 threads)

(static)
n = 20000
Work took 4.534801 seconds (1 threads)
Work took 2.395341 seconds (2 threads)
Work took 1.280876 seconds (4 threads)
Work took 0.967056 seconds (8 threads)

(static)
n = 30000
Work took 9.129823 seconds (1 threads)
Work took 4.882134 seconds (2 threads)
Work took 2.642982 seconds (4 threads)
Work took 2.180144 seconds (8 threads)

(dynamic)
n = 10000
Work took 6.772447 seconds (1 threads)
Work took 13.619936 seconds (2 threads)
Work took 9.127385 seconds (4 threads)
Work took 10.986162 seconds (8 threads)

(dynamic)
n = 20000
Work took 27.142183 seconds (1 threads)
Work took 66.623914 seconds (2 threads)
Work took 65.317567 seconds (4 threads)
Work took 77.381599 seconds (8 threads)

(dynamic)
n = 30000
Work took 46.731187 seconds (1 threads)
Work took 111.562413 seconds (2 threads)
Work took 136.235455 seconds (4 threads)
Work took 164.682156 seconds (8 threads)

(guided)
n = 10000
Work took 1.127427 seconds (1 threads)
Work took 0.595418 seconds (2 threads)
Work took 0.317539 seconds (4 threads)
Work took 0.240377 seconds (8 threads)

(guided)
n = 20000
Work took 4.520418 seconds (1 threads)
Work took 2.398780 seconds (2 threads)
Work took 1.276039 seconds (4 threads)
Work took 0.968851 seconds (8 threads)

(guided)
n = 30000
Work took 9.182117 seconds (1 threads)
Work took 4.887175 seconds (2 threads)
Work took 2.650548 seconds (4 threads)
Work took 2.170988 seconds (8 threads)


coloumn-based
(static)
n = 10000
Work took 8.025280 seconds (1 threads)
Work took 4.175322 seconds (2 threads)
Work took 3.526291 seconds (4 threads)
Work took 4.368813 seconds (8 threads)

(static)
n = 20000
Work took 169.698711 seconds (1 threads)
Work took 93.398449 seconds (2 threads)
Work took 53.653505 seconds (4 threads)
Work took 34.971585 seconds (8 threads)

(static)
n = 30000
Work took 404.480137 seconds (1 threads)
Work took 216.140284 seconds (2 threads)
Work took 125.160575 seconds (4 threads)
Work took 89.933497 seconds (8 threads)

(dynamic)
n = 10000
Work took 18.402434 seconds (1 threads)
Work took 16.011139 seconds (2 threads)
Work took 9.601004 seconds (4 threads)
Work took 7.731111 seconds (8 threads)

(dynamic)
n = 20000
Work took 299.672543 seconds (1 threads)
Work took 170.092547 seconds (2 threads)
Work took 108.650611 seconds (4 threads)
Work took 145.651243 seconds (8 threads)

(dynamic)
n = 30000
Work took 662.482730 seconds (1 threads)
Work took 423.887747 seconds (2 threads)
Work took 271.659215 seconds (4 threads)
Work took 371.875404 seconds (8 threads)

(guided)
n = 10000
Work took 8.020615 seconds (1 threads)
Work took 4.197010 seconds (2 threads)
Work took 2.343825 seconds (4 threads)
Work took 4.566590 seconds (8 threads)

(guided)
n = 20000
Work took 168.367982 seconds (1 threads)
Work took 91.814677 seconds (2 threads)
Work took 51.125710 seconds (4 threads)
Work took 35.084654 seconds (8 threads)

(guided)
n = 30000
Work took 404.947696 seconds (1 threads)
Work took 215.009794 seconds (2 threads)
Work took 123.916645 seconds (4 threads)
Work took 84.829351 seconds (8 threads)

-----------------------------------------------------
How do they differ?
While in static scheduling the loop passes are strictly
divided into the number of threads available, in dynamic
scheduling the effort for the lower parts is calculated
and the threads are divided accordingly.
The guided scheduling is similar to the dynamic but with
the guided scheduling the threads are still adapted to 
the pieces if it is unbalanced.

What do I observe?
On the one hand, longer runtimes arise with dynamic
scheduling, on the other hand, with the line-based
method, the runtime increases with increasing thread
count and increasing the size.



